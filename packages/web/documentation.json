{
    "pipes": [
        {
            "name": "LocalizeAuthErrorPipe",
            "id": "pipe-LocalizeAuthErrorPipe-04ea8f6eaa66e7f4fc6827f5e2ff47ec",
            "file": "src/app/pipes/localize-auth-error.pipe.ts",
            "type": "pipe",
            "description": "",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "AuthError"
                        },
                        {
                            "name": "args",
                            "type": "unknown[]",
                            "dotDotDotToken": true
                        }
                    ],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [],
                    "line": 8,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "AuthError",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "args",
                            "type": "unknown[]",
                            "dotDotDotToken": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "localizeAuthError",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\nimport { AuthError } from '@firebase/auth';\n\n@Pipe({\n  name: 'localizeAuthError',\n})\nexport class LocalizeAuthErrorPipe implements PipeTransform {\n  transform(value: AuthError, ...args: unknown[]): unknown {\n    if (value.code in AuthErrorMessages) return AuthErrorMessages[value.code];\n    else return value.message;\n  }\n}\n\nenum AuthCodes {\n  ADMIN_ONLY_OPERATION = 'admin-restricted-operation',\n  ARGUMENT_ERROR = 'argument-error',\n  APP_NOT_AUTHORIZED = 'app-not-authorized',\n  APP_NOT_INSTALLED = 'app-not-installed',\n  CAPTCHA_CHECK_FAILED = 'captcha-check-failed',\n  CODE_EXPIRED = 'code-expired',\n  CORDOVA_NOT_READY = 'cordova-not-ready',\n  CORS_UNSUPPORTED = 'cors-unsupported',\n  CREDENTIAL_ALREADY_IN_USE = 'credential-already-in-use',\n  CREDENTIAL_MISMATCH = 'custom-token-mismatch',\n  CREDENTIAL_TOO_OLD_LOGIN_AGAIN = 'requires-recent-login',\n  DEPENDENT_SDK_INIT_BEFORE_AUTH = 'dependent-sdk-initialized-before-auth',\n  DYNAMIC_LINK_NOT_ACTIVATED = 'dynamic-link-not-activated',\n  EMAIL_CHANGE_NEEDS_VERIFICATION = 'email-change-needs-verification',\n  EMAIL_EXISTS = 'email-already-in-use',\n  EMULATOR_CONFIG_FAILED = 'emulator-config-failed',\n  EXPIRED_OOB_CODE = 'expired-action-code',\n  EXPIRED_POPUP_REQUEST = 'cancelled-popup-request',\n  INTERNAL_ERROR = 'internal-error',\n  INVALID_API_KEY = 'invalid-api-key',\n  INVALID_APP_CREDENTIAL = 'invalid-app-credential',\n  INVALID_APP_ID = 'invalid-app-id',\n  INVALID_AUTH = 'invalid-user-token',\n  INVALID_AUTH_EVENT = 'invalid-auth-event',\n  INVALID_CERT_HASH = 'invalid-cert-hash',\n  INVALID_CODE = 'invalid-verification-code',\n  INVALID_CONTINUE_URI = 'invalid-continue-uri',\n  INVALID_CORDOVA_CONFIGURATION = 'invalid-cordova-configuration',\n  INVALID_CUSTOM_TOKEN = 'invalid-custom-token',\n  INVALID_DYNAMIC_LINK_DOMAIN = 'invalid-dynamic-link-domain',\n  INVALID_EMAIL = 'invalid-email',\n  INVALID_EMULATOR_SCHEME = 'invalid-emulator-scheme',\n  INVALID_IDP_RESPONSE = 'invalid-credential',\n  INVALID_MESSAGE_PAYLOAD = 'invalid-message-payload',\n  INVALID_MFA_SESSION = 'invalid-multi-factor-session',\n  INVALID_OAUTH_CLIENT_ID = 'invalid-oauth-client-id',\n  INVALID_OAUTH_PROVIDER = 'invalid-oauth-provider',\n  INVALID_OOB_CODE = 'invalid-action-code',\n  INVALID_ORIGIN = 'unauthorized-domain',\n  INVALID_PASSWORD = 'wrong-password',\n  INVALID_PERSISTENCE = 'invalid-persistence-type',\n  INVALID_PHONE_NUMBER = 'invalid-phone-number',\n  INVALID_PROVIDER_ID = 'invalid-provider-id',\n  INVALID_RECIPIENT_EMAIL = 'invalid-recipient-email',\n  INVALID_SENDER = 'invalid-sender',\n  INVALID_SESSION_INFO = 'invalid-verification-id',\n  INVALID_TENANT_ID = 'invalid-tenant-id',\n  MFA_INFO_NOT_FOUND = 'multi-factor-info-not-found',\n  MFA_REQUIRED = 'multi-factor-auth-required',\n  MISSING_ANDROID_PACKAGE_NAME = 'missing-android-pkg-name',\n  MISSING_APP_CREDENTIAL = 'missing-app-credential',\n  MISSING_AUTH_DOMAIN = 'auth-domain-config-required',\n  MISSING_CODE = 'missing-verification-code',\n  MISSING_CONTINUE_URI = 'missing-continue-uri',\n  MISSING_IFRAME_START = 'missing-iframe-start',\n  MISSING_IOS_BUNDLE_ID = 'missing-ios-bundle-id',\n  MISSING_OR_INVALID_NONCE = 'missing-or-invalid-nonce',\n  MISSING_MFA_INFO = 'missing-multi-factor-info',\n  MISSING_MFA_SESSION = 'missing-multi-factor-session',\n  MISSING_PHONE_NUMBER = 'missing-phone-number',\n  MISSING_SESSION_INFO = 'missing-verification-id',\n  MODULE_DESTROYED = 'app-deleted',\n  NEED_CONFIRMATION = 'account-exists-with-different-credential',\n  NETWORK_REQUEST_FAILED = 'network-request-failed',\n  NULL_USER = 'null-user',\n  NO_AUTH_EVENT = 'no-auth-event',\n  NO_SUCH_PROVIDER = 'no-such-provider',\n  OPERATION_NOT_ALLOWED = 'operation-not-allowed',\n  OPERATION_NOT_SUPPORTED = 'operation-not-supported-in-this-environment',\n  POPUP_BLOCKED = 'popup-blocked',\n  POPUP_CLOSED_BY_USER = 'popup-closed-by-user',\n  PROVIDER_ALREADY_LINKED = 'provider-already-linked',\n  QUOTA_EXCEEDED = 'quota-exceeded',\n  REDIRECT_CANCELLED_BY_USER = 'redirect-cancelled-by-user',\n  REDIRECT_OPERATION_PENDING = 'redirect-operation-pending',\n  REJECTED_CREDENTIAL = 'rejected-credential',\n  SECOND_FACTOR_ALREADY_ENROLLED = 'second-factor-already-in-use',\n  SECOND_FACTOR_LIMIT_EXCEEDED = 'maximum-second-factor-count-exceeded',\n  TENANT_ID_MISMATCH = 'tenant-id-mismatch',\n  TIMEOUT = 'timeout',\n  TOKEN_EXPIRED = 'user-token-expired',\n  TOO_MANY_ATTEMPTS_TRY_LATER = 'too-many-requests',\n  UNAUTHORIZED_DOMAIN = 'unauthorized-continue-uri',\n  UNSUPPORTED_FIRST_FACTOR = 'unsupported-first-factor',\n  UNSUPPORTED_PERSISTENCE = 'unsupported-persistence-type',\n  UNSUPPORTED_TENANT_OPERATION = 'unsupported-tenant-operation',\n  UNVERIFIED_EMAIL = 'unverified-email',\n  USER_CANCELLED = 'user-cancelled',\n  USER_DELETED = 'user-not-found',\n  USER_DISABLED = 'user-disabled',\n  USER_MISMATCH = 'user-mismatch',\n  USER_SIGNED_OUT = 'user-signed-out',\n  WEAK_PASSWORD = 'weak-password',\n  WEB_STORAGE_UNSUPPORTED = 'web-storage-unsupported',\n  ALREADY_INITIALIZED = 'already-initialized',\n}\n\nexport const AuthErrorMessages: { [key: string]: string } = {\n  'auth/admin-restricted-operation': $localize`:@@firebase.auth.errors.adminOnlyOperation:This operation can be done only by administrators.`,\n  'auth/auth-domain-config-required': $localize`:@@firebase.auth.errors.invalidOrigin:The current domain is not authorized for the operation.`,\n  'auth/cancelled-popup-request': $localize`:@@firebase.auth.errors.cancelledPopUpRequest:The popup request was cancelled by the user.`,\n};\n"
        }
    ],
    "interfaces": [],
    "injectables": [
        {
            "name": "AuthService",
            "id": "injectable-AuthService-ca3bab29f1ed2a723914ac60bf7920e0",
            "file": "src/app/core/services/auth.service.ts",
            "properties": [
                {
                    "name": "authState",
                    "type": "Observable<User | null>",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "user",
                    "type": "User | null",
                    "optional": false,
                    "description": "",
                    "line": 21
                }
            ],
            "methods": [
                {
                    "name": "sendSignInLinkToEmail",
                    "args": [
                        {
                            "name": "email",
                            "type": "string"
                        },
                        {
                            "name": "url",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 47,
                    "description": "<p>Sends a sign in link to the user&#39;s email.</p>\n",
                    "modifierKind": [
                        114,
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 966,
                                "end": 971,
                                "flags": 0,
                                "escapedText": "email"
                            },
                            "type": "string",
                            "tagName": {
                                "pos": 960,
                                "end": 965,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "<p>The email to send the email.</p>\n"
                        },
                        {
                            "name": {
                                "pos": 1013,
                                "end": 1016,
                                "flags": 0,
                                "escapedText": "url"
                            },
                            "type": "string",
                            "tagName": {
                                "pos": 1007,
                                "end": 1012,
                                "flags": 0,
                                "escapedText": "param"
                            },
                            "comment": "<p>The URL to continue to after user clicks the link.</p>\n"
                        }
                    ]
                },
                {
                    "name": "signInWithGoogle",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 37,
                    "description": "<p>Opens a popup for signing in via Google OAuth.</p>\n",
                    "modifierKind": [
                        114,
                        120
                    ]
                }
            ],
            "description": "<p>Service that interacts with Firebase Authentication.</p>\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { Auth } from '@angular/fire';\nimport { authState } from '@angular/fire/auth';\nimport {\n  ActionCodeSettings,\n  GoogleAuthProvider,\n  sendSignInLinkToEmail,\n  signInWithPopup,\n  User,\n} from '@firebase/auth';\nimport { Observable } from 'rxjs';\n\n/**\n * Service that interacts with Firebase Authentication.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  authState: Observable<User | null>;\n  user: User | null;\n\n  constructor(private auth: Auth) {\n    this.authState = authState(auth);\n    this.user = auth.currentUser;\n\n    this.authState.subscribe((user) => {\n      if (user) {\n        this.user = user;\n      }\n    });\n  }\n\n  /**\n   * Opens a popup for signing in via Google OAuth.\n   */\n  public async signInWithGoogle() {\n    const provider = new GoogleAuthProvider();\n    await signInWithPopup(this.auth, provider);\n  }\n\n  /**\n   * Sends a sign in link to the user's email.\n   * @param email The email to send the email.\n   * @param url The URL to continue to after user clicks the link.\n   */\n  public async sendSignInLinkToEmail(email: string, url: string) {\n    const actionCodeSettings: ActionCodeSettings = {\n      url: url,\n      handleCodeInApp: true,\n    };\n    try {\n      await sendSignInLinkToEmail(this.auth, email, actionCodeSettings);\n      // this.logger.info(`[AuthService] Sent sign in email link`);\n    } catch (error) {\n      // this.logger.error(\n      //   `[AuthService] Failed to send sign in email link : ${error.code}`\n      // );\n    }\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "auth",
                        "type": "Auth"
                    }
                ],
                "line": 21,
                "jsdoctags": [
                    {
                        "name": "auth",
                        "type": "Auth",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        }
    ],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-5a7a1b6cd93c067319c6b9be656d9da2",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'Lookahead'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  title = 'Lookahead';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use \"~@angular/material/toolbar/toolbar-variables\" as toolbar;\nmain {\n  position: relative;\n}\n\n// An extra padding of 10px is applied to avoid .app-content things sticking\n// to the navbar.\n$height-desktop-with-padding: toolbar.$height-desktop + 10px;\n$height-mobile-with-padding: toolbar.$height-mobile + 10px;\n\n.app-content {\n  padding-top: $height-desktop-with-padding;\n  height: calc(100% - $height-desktop-with-padding);\n}\n\n@media (max-width: 576px) {\n  .app-content {\n    padding-top: $height-mobile-with-padding;\n    height: calc(100% - $height-mobile-with-padding);\n  }\n}\n",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<main>\n  <app-core></app-core>\n  <div class=\"app-content\">\n    <router-outlet></router-outlet>\n  </div>\n</main>\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-642c6c4e474cd5a0ac760dfda26b2fc9",
            "file": "src/stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": "<button   type=\"button\"\n   (click)=\"onClick.emit($event)\"\n   [ngClass]=\"classes\"\n   [ngStyle]=\"{ 'background-color': backgroundColor }\"\n >\n   {{ label }}\n </button>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "description": "<p>What background color to use</p>\n",
                    "line": 26,
                    "type": "string"
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "description": "<p>Button contents</p>\n",
                    "line": 40
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 20
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 32,
                    "type": "\"small\" | \"medium\" | \"large\""
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 46,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button',\n  template: ` <button\n    type=\"button\"\n    (click)=\"onClick.emit($event)\"\n    [ngClass]=\"classes\"\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\n  >\n    {{ label }}\n  </button>`,\n  styleUrls: ['./button.css'],\n})\nexport default class ButtonComponent {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-weight: 700;\n  border: 0;\n  border-radius: 3em;\n  cursor: pointer;\n  display: inline-block;\n  line-height: 1;\n}\n.storybook-button--primary {\n  color: white;\n  background-color: #1ea7fd;\n}\n.storybook-button--secondary {\n  color: #333;\n  background-color: transparent;\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\n}\n.storybook-button--small {\n  font-size: 12px;\n  padding: 10px 16px;\n}\n.storybook-button--medium {\n  font-size: 14px;\n  padding: 11px 20px;\n}\n.storybook-button--large {\n  font-size: 16px;\n  padding: 12px 24px;\n}\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 48
                    }
                }
            }
        },
        {
            "name": "CoreComponent",
            "id": "component-CoreComponent-9e844a7e3ff6d3e1d36019c45a5a8c65",
            "file": "src/app/core/core.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-core",
            "styleUrls": [
                "./core.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./core.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "afAuth",
                    "type": "Auth",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { Auth } from '@angular/fire';\n\n@Component({\n  selector: 'app-core',\n  templateUrl: './core.component.html',\n  styleUrls: ['./core.component.scss'],\n})\nexport class CoreComponent {\n  constructor(public afAuth: Auth) {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./core.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "afAuth",
                        "type": "Auth"
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "afAuth",
                        "type": "Auth",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<app-toolbar title=\"Lookahead\"></app-toolbar>\n"
        },
        {
            "name": "DashComponent",
            "id": "component-DashComponent-8a32c14463fd1bd32542a7ef1f5ed7e4",
            "file": "src/app/dash/dash/dash.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-dash",
            "styleUrls": [
                "./dash.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./dash.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "currentUser",
                    "type": "User | null",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "currentUser$",
                    "type": "Observable<User | null>",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "destroy$",
                    "defaultValue": "new Subject<boolean>()",
                    "type": "Subject<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Auth } from '@angular/fire';\nimport { User } from '@firebase/auth';\nimport { authState } from 'rxfire/auth';\nimport { Observable, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-dash',\n  templateUrl: './dash.component.html',\n  styleUrls: ['./dash.component.scss'],\n})\nexport class DashComponent implements OnInit, OnDestroy {\n  destroy$: Subject<boolean> = new Subject<boolean>();\n  currentUser!: User | null;\n  currentUser$: Observable<User | null>;\n  constructor(private afAuth: Auth) {\n    this.currentUser$ = authState(this.afAuth).pipe(takeUntil(this.destroy$));\n  }\n\n  ngOnInit(): void {\n    authState(this.afAuth)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((user) => {\n        if (user) {\n          this.currentUser = user;\n        }\n      });\n  }\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.unsubscribe();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./dash.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "afAuth",
                        "type": "Auth"
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "afAuth",
                        "type": "Auth",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<h1>Details</h1>\n\n<div *ngIf=\"currentUser\">\n  <p>{{ currentUser.displayName ?? \"You don't have a name ;)\" }}</p>\n  <p>{{ currentUser.email }}</p>\n</div>\n"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-246e2a69dc126a3bd76c6328dd3b93e2",
            "file": "src/stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <storybook-button\n          *ngIf=\"user\"\n          size=\"small\"\n          (onClick)=\"onLogout.emit($event)\"\n          label=\"Log out\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          (onClick)=\"onLogin.emit($event)\"\n          label=\"Log in\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          primary\n          size=\"small\"\n          (onClick)=\"onCreateAccount.emit($event)\"\n          label=\"Sign up\"\n        ></storybook-button>\n      </div>\n    </div>\n  </header>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "line": 53,
                    "type": "unknown"
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 62,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 56,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 59,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-header',\n  template: `<header>\n    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <storybook-button\n          *ngIf=\"user\"\n          size=\"small\"\n          (onClick)=\"onLogout.emit($event)\"\n          label=\"Log out\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          (onClick)=\"onLogin.emit($event)\"\n          label=\"Log in\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          primary\n          size=\"small\"\n          (onClick)=\"onCreateAccount.emit($event)\"\n          label=\"Sign up\"\n        ></storybook-button>\n      </div>\n    </div>\n  </header>`,\n  styleUrls: ['./header.css'],\n})\nexport default class HeaderComponent {\n  @Input()\n  user: unknown = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".wrapper {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 15px 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\nsvg {\n  display: inline-block;\n  vertical-align: top;\n}\n\nh1 {\n  font-weight: 900;\n  font-size: 20px;\n  line-height: 1;\n  margin: 6px 0 6px 10px;\n  display: inline-block;\n  vertical-align: top;\n}\n\nbutton + button {\n  margin-left: 10px;\n}\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "LandingComponent",
            "id": "component-LandingComponent-ea2fd0e823c1ff211083983d28ceadd8",
            "file": "src/app/dash/landing/landing.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-landing",
            "styleUrls": [
                "./landing.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./landing.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-landing',\n  templateUrl: './landing.component.html',\n  styleUrls: ['./landing.component.scss'],\n})\nexport class LandingComponent implements OnInit {\n  constructor(private titleService: Title) {}\n\n  ngOnInit(): void {\n    this.titleService.setTitle('Lookahead');\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use '~@angular/material' as mat;\n@use 'sass:map';\n@use \"../../../styles.scss\" as theme;\n\narticle.landing-article {\n  user-select: none;\n  // We don't want a gap between this element and the navbar, so remove it.\n  margin-top: -10px;\n  padding: 4em 0;\n  background-color: map.get(theme.$lookahead-web-primary, 600);\n  color: map.get(theme.$lookahead-web-primary, darker-contrast);\n  text-align: center;\n  $landing-article-typography: mat.define-typography-config(\n    $font-family: theme.$lookahead-font-family,\n    $headline: mat.define-typography-level(4rem, 4rem, 600),\n  );\n  .headline {\n    @include mat.typography-level($landing-article-typography, \"headline\");\n  }\n}\n\n.features,\n.tryme {\n  margin-top: 0.5em;\n  text-align: center;\n}\n\n.features {\n  h1 {\n    font-weight: light;\n  }\n  .cards {\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    mat-card {\n      margin: 0.5em;\n      min-height: 3em;\n      mat-icon {\n        width: 100%;\n        text-align: center;\n        font-size: 3em;\n      }\n    }\n  }\n}\n\n@media (max-width: 600px) {\n  .cards {\n    grid-template-columns: 1fr !important;\n  }\n}\n",
                    "styleUrl": "./landing.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "titleService",
                        "type": "Title"
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "titleService",
                        "type": "Title",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<article class=\"landing-article\">\n  <h1 i18n=\"landing page title@@landing.title\" class=\"headline\">\n    This is Lookahead.\n  </h1>\n  <h2 i18n=\"landing page subtitle@@landing.subtitle\" class=\"mat-h2\">\n    The fast and beautiful notes app for everyone.\n  </h2>\n  <br /><br />\n  <a routerLink=\"/signin\">\n    <button mat-raised-button>Sign In</button>\n  </a>\n  <!-- A hack to keep some space between the buttons. -->\n  <span>{{ \"  \" }}</span>\n  <a routerLink=\"/demo\">\n    <button mat-raised-button>Try the demo</button>\n  </a>\n</article>\n<section class=\"features\">\n  <h1 class=\"mat-display-2\">Features</h1>\n  <div class=\"cards\">\n    <mat-card>\n      <mat-icon>speed</mat-icon>\n      <h1>Fast</h1>\n      <p>\n        The app stays blazing fast, allowing you to keep taking notes without a\n        hiccup.\n      </p>\n    </mat-card>\n    <mat-card>\n      <mat-icon>lock</mat-icon>\n      <mat-card-title>\n        <h1>Secure</h1>\n      </mat-card-title>\n      <mat-card-content>\n        <p>\n          End-to-end encryption of your notes across all of your devices\n          prevents eavesdroppers from poking into your thoughts.\n        </p>\n      </mat-card-content>\n    </mat-card>\n    <mat-card>\n      <mat-icon>signal_cellular_connected_no_internet_4_bar</mat-icon>\n      <mat-card-title>\n        <h1>Offline</h1>\n      </mat-card-title>\n      <mat-card-content>\n        <p>\n          Lookahead also works when you are offline. It needs the Internet only\n          to sync your notes across your devices.\n        </p>\n      </mat-card-content>\n    </mat-card>\n    <mat-card>\n      <mat-icon>content_paste</mat-icon>\n      <mat-card-title>\n        <h1>More than just notes</h1>\n      </mat-card-title>\n      <mat-card-content>\n        <p>\n          Add to-dos, set reminders, enrich your notes with images and videos.\n        </p>\n      </mat-card-content>\n    </mat-card>\n  </div>\n  <br />\n  <br />\n  <h1 class=\"mat-display-2\">Also available as a CLI!</h1>\n  <h2 class=\"title\">\n    If you basically live in the terminal and want to use Lookahead there, we\n    got you covered! Take a look at the official CLI tool!\n  </h2>\n</section>\n\n<br />\n<hr />\n<br />\n\n<section class=\"tryme\">\n  <h1 class=\"mat-display-3\">So, what are you waiting for?</h1>\n  <a routerLink=\"/signin\" mat-flat-button>Sign in</a>\n  Or\n  <a routerLink=\"/demo\" mat-flat-button>Check out a demo version</a>\n</section>\n"
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-8f196770333aa216860a88c0b6b221aa",
            "file": "src/stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"onLogout.emit($event)\"\n      (onLogin)=\"onLogin.emit($event)\"\n      (onCreateAccount)=\"onCreateAccount.emit($event)\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "line": 64,
                    "type": "unknown"
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 73,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 67,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 70,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-page',\n  template: `<article>\n    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"onLogout.emit($event)\"\n      (onLogin)=\"onLogin.emit($event)\"\n      (onCreateAccount)=\"onCreateAccount.emit($event)\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>`,\n  styleUrls: ['./page.css'],\n})\nexport default class PageComponent {\n  @Input()\n  user: unknown = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n\n// export const Page = ({ user, onLogin, onLogout, onCreateAccount }) => (\n//   <article>\n//     <Header user={user} onLogin={onLogin} onLogout={onLogout} onCreateAccount={onCreateAccount} />\n\n// );\n// Page.propTypes = {\n//   user: PropTypes.shape({}),\n//   onLogin: PropTypes.func.isRequired,\n//   onLogout: PropTypes.func.isRequired,\n//   onCreateAccount: PropTypes.func.isRequired,\n// };\n\n// Page.defaultProps = {\n//   user: null,\n// };\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "section {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  line-height: 24px;\n  padding: 48px 20px;\n  margin: 0 auto;\n  max-width: 600px;\n  color: #333;\n}\n\nh2 {\n  font-weight: 900;\n  font-size: 32px;\n  line-height: 1;\n  margin: 0 0 4px;\n  display: inline-block;\n  vertical-align: top;\n}\n\np {\n  margin: 1em 0;\n}\n\na {\n  text-decoration: none;\n  color: #1ea7fd;\n}\n\nul {\n  padding-left: 30px;\n  margin: 1em 0;\n}\n\nli {\n  margin-bottom: 8px;\n}\n\n.tip {\n  display: inline-block;\n  border-radius: 1em;\n  font-size: 11px;\n  line-height: 12px;\n  font-weight: 700;\n  background: #e7fdd8;\n  color: #66bf3c;\n  padding: 4px 12px;\n  margin-right: 10px;\n  vertical-align: top;\n}\n\n.tip-wrapper {\n  font-size: 13px;\n  line-height: 20px;\n  margin-top: 40px;\n  margin-bottom: 40px;\n}\n\n.tip-wrapper svg {\n  display: inline-block;\n  height: 12px;\n  width: 12px;\n  margin-right: 4px;\n  vertical-align: top;\n  margin-top: 3px;\n}\n\n.tip-wrapper svg path {\n  fill: #1ea7fd;\n}\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "PageNotFoundComponent",
            "id": "component-PageNotFoundComponent-5f6790dcec5f63861a83263838525749",
            "file": "src/app/core/components/page-not-found/page-not-found.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-not-found",
            "styleUrls": [
                "./page-not-found.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./page-not-found.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.scss'],\n})\nexport class PageNotFoundComponent {\n  constructor(private titleService: Title) {\n    this.titleService.setTitle('404 - The plug was pulled out of the socket!');\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "article {\n  text-align: center;\n}\n\n.black-hole {\n  user-select: none;\n  width: 112px;\n  height: auto;\n  animation: black-hole-rotate 10s linear infinite forwards;\n  margin-bottom: -7px; // This makes it inline with the text.\n}\n\n@keyframes black-hole-rotate {\n  25% {\n    transform: translateX(-3px) rotate(90deg);\n  }\n  50% {\n    transform: translateX(0px) rotate(180deg);\n  }\n  75% {\n    transform: translateX(3px) rotate(270deg);\n  }\n  100% {\n    transform: translateX(0px) rotate(360deg);\n  }\n}\n",
                    "styleUrl": "./page-not-found.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "titleService",
                        "type": "Title"
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "titleService",
                        "type": "Title",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<article>\n  <h1 class=\"mat-display-4\">\n    <span>4</span>\n    <img\n      src=\"/assets/images/black-hole.svg\"\n      alt=\"A black hole.\"\n      class=\"black-hole\"\n    />\n    <span>4</span>\n  </h1>\n\n  <h1 class=\"mat-display-3\">That page probably went inside a black hole.</h1>\n  <h2>\n    Was this a mistake?\n    <a href=\"https://github.com/obnoxiousnerd/lookahead/issues/new\">\n      Tell us and we'll fix it.</a\n    >\n    <br />\n    Or\n    <a mat-raised-button routerLink=\"/\"> Go back to home</a>\n  </h2>\n</article>\n"
        },
        {
            "name": "SigninComponent",
            "id": "component-SigninComponent-ff98d53b3c16e4ab76428d7e3cb5b585",
            "file": "src/app/dash/signin/signin.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-signin",
            "styleUrls": [
                "./signin.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./signin.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "emailFormControl",
                    "defaultValue": "new FormControl('', [\n    Validators.required,\n    Validators.email,\n  ])",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "emailSent",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 58,
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "sendEmailLink",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 44,
                    "modifierKind": [
                        114,
                        120
                    ]
                },
                {
                    "name": "signInWithGoogle",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 30,
                    "modifierKind": [
                        114,
                        120
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { Auth } from '@angular/fire';\nimport { FormControl, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { isSignInWithEmailLink, signInWithEmailLink } from '@firebase/auth';\nimport { AuthService } from 'src/app/core/services/auth.service';\nimport { LocalizeAuthErrorPipe } from 'src/app/pipes/localize-auth-error.pipe';\n\n@Component({\n  selector: 'app-signin',\n  templateUrl: './signin.component.html',\n  styleUrls: ['./signin.component.scss'],\n})\nexport class SigninComponent implements OnInit {\n  public emailSent = false;\n  public emailFormControl = new FormControl('', [\n    Validators.required,\n    Validators.email,\n  ]);\n  constructor(\n    private auth: AuthService,\n    private afAuth: Auth,\n    private snackBar: MatSnackBar,\n    private localizeAuthError: LocalizeAuthErrorPipe,\n    // private logger: LogService,\n    private router: Router\n  ) {}\n\n  public async signInWithGoogle() {\n    try {\n      await this.auth.signInWithGoogle();\n      this.router.navigateByUrl('/app');\n    } catch (error) {\n      this.snackBar.open(\n        $localize`:@@auth.errors.googleSignInFailed:Failed to sign in using Google: ${this.localizeAuthError.transform(\n          error\n        )}`,\n        'OK'\n      );\n    }\n  }\n\n  public async sendEmailLink() {\n    const email = this.emailFormControl.value;\n    try {\n      // this.logger.debug(`Sending sign in link to ${email}`);\n      await this.auth.sendSignInLinkToEmail(email, window.location.href);\n      // Store email in local storage so that when this page is accessed via\n      // the sign in link, we can sign the user in accordingly.\n      localStorage.setItem('signInEmail', email);\n      this.emailSent = true;\n    } catch (error) {\n      this.snackBar.open(`Failed to send email link: ${error.message}`, 'OK');\n    }\n  }\n\n  async ngOnInit(): Promise<void> {\n    if (isSignInWithEmailLink(this.afAuth, window.location.href)) {\n      let email = localStorage.getItem('signInEmail');\n      if (!email) {\n        email = prompt('Please re-enter your email address');\n      }\n      try {\n        await signInWithEmailLink(\n          this.afAuth,\n          email as string,\n          window.location.href\n        );\n        localStorage.removeItem('signInEmail');\n        this.router.navigateByUrl('/app');\n      } catch (error) {\n        this.snackBar.open(\n          `Failed to sign in with email link: ${error.message}`,\n          'OK'\n        );\n      }\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".methods {\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  mat-card {\n    margin: 0 1em;\n    text-align: center;\n  }\n}\n\n.email-sent {\n  text-align: center;\n  overflow-x: hidden;\n  .send-icon {\n    user-select: none;\n    font-size: 6em;\n    height: 1em;\n    width: 1em;\n    margin: 0.25em 0;\n    cursor: pointer;\n    animation: bulge 2s infinite ease 1s;\n    &:hover {\n      animation: throw-airplane 3s 1 ease;\n    }\n  }\n}\n\n@keyframes bulge {\n  50% {\n    transform: scale(1.2);\n  }\n  100% {\n    transform: scale(1);\n  }\n}\n\n@keyframes throw-airplane {\n  30% {\n    transform: translateX(-2em);\n  }\n  60% {\n    transform: translateX(110vw);\n  }\n  61% {\n    transform: translateX(-100vw);\n  }\n  100% {\n    transform: translateX(0%);\n  }\n}\n",
                    "styleUrl": "./signin.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "auth",
                        "type": "AuthService"
                    },
                    {
                        "name": "afAuth",
                        "type": "Auth"
                    },
                    {
                        "name": "snackBar",
                        "type": "MatSnackBar"
                    },
                    {
                        "name": "localizeAuthError",
                        "type": "LocalizeAuthErrorPipe"
                    },
                    {
                        "name": "router",
                        "type": "Router"
                    }
                ],
                "line": 20,
                "jsdoctags": [
                    {
                        "name": "auth",
                        "type": "AuthService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "afAuth",
                        "type": "Auth",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "snackBar",
                        "type": "MatSnackBar",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "localizeAuthError",
                        "type": "LocalizeAuthErrorPipe",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<ng-container *ngIf=\"!emailSent; else emailSentTemplate\">\n  <h1 class=\"mat-display-3\">Select a method to sign in</h1>\n  <section class=\"methods\">\n    <mat-card class=\"email\">\n      <mat-card-title\n        ><h1 i18n=\"@@signin.email.title\">Email</h1></mat-card-title\n      >\n      <mat-form-field>\n        <mat-label i18n=\"@@signin.email.label\">Enter your email</mat-label>\n        <input\n          matInput\n          type=\"email\"\n          [formControl]=\"emailFormControl\"\n          placeholder=\"you@domain.tld\"\n          (keyup.enter)=\"sendEmailLink()\"\n          required\n        />\n        <mat-error\n          *ngIf=\"\n            emailFormControl.hasError('email') &&\n            !emailFormControl.hasError('required')\n          \"\n          i18n=\"@@signin.email.errors.invaildEmail\"\n        >\n          Please enter a valid email address\n        </mat-error>\n        <mat-error\n          *ngIf=\"emailFormControl.hasError('required')\"\n          i18n=\"@@signin.email.errors.required\"\n        >\n          Email is <strong>required</strong>\n        </mat-error>\n      </mat-form-field>\n      <br />\n      <button\n        type=\"submit\"\n        color=\"primary\"\n        mat-raised-button\n        [disabled]=\"!emailFormControl.valid\"\n        (click)=\"sendEmailLink()\"\n        i18n=\"@@signin.email.signInButton\"\n      >\n        Sign in\n      </button>\n    </mat-card>\n    <mat-card class=\"google\">\n      <mat-card-title><h1>Google</h1></mat-card-title>\n      <mat-card-content>\n        <button\n          color=\"primary\"\n          mat-raised-button\n          (click)=\"signInWithGoogle()\"\n          i18n=\"\n            Text for button which is used to sign in using\n            Google@@signin.google.signInButton\"\n        >\n          Sign in with Google\n        </button>\n      </mat-card-content>\n    </mat-card>\n  </section>\n</ng-container>\n\n<ng-template #emailSentTemplate>\n  <div class=\"email-sent\">\n    <mat-icon class=\"send-icon\">send</mat-icon>\n    <h1 class=\"mat-display-1\" i18n=\"@@signin.emailSent\">\n      Open your mailbox and click the link to sign in. You can close this tab.\n    </h1>\n  </div>\n</ng-template>\n"
        },
        {
            "name": "ToolbarComponent",
            "id": "component-ToolbarComponent-db677e500260553d0b153daf3529c9fc",
            "file": "src/app/core/components/toolbar/toolbar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-toolbar",
            "styleUrls": [
                "./toolbar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./toolbar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "afAuth",
                    "line": 11,
                    "type": "Auth"
                },
                {
                    "name": "title",
                    "defaultValue": "''",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { Auth } from '@angular/fire';\n\n@Component({\n  selector: 'app-toolbar',\n  templateUrl: './toolbar.component.html',\n  styleUrls: ['./toolbar.component.scss'],\n})\nexport class ToolbarComponent {\n  @Input() title: string = '';\n  @Input() afAuth: Auth;\n  constructor(afAuth: Auth) {\n    this.afAuth = afAuth;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".fixed {\n  position: fixed;\n  top: 0;\n  z-index: 10;\n}\n\n.spacer {\n  flex: 1 1 auto;\n}\n\nimg.user-avatar {\n  object-fit: contain;\n  width: calc(100%);\n  height: auto;\n  border-radius: 50%;\n}\n",
                    "styleUrl": "./toolbar.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "afAuth",
                        "type": "Auth"
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "afAuth",
                        "type": "Auth",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<mat-toolbar class=\"fixed\" [class.mat-elevation-z10]=\"true\">\n  <a mat-button routerLink=\"/\">\n    <span class=\"title\">{{ title }}</span>\n  </a>\n\n  <span class=\"spacer\"></span>\n\n  <button mat-icon-button>\n    <ng-container\n      *ngIf=\"\n        afAuth.currentUser && afAuth.currentUser.photoURL;\n        else noCurrentUserOrPhoto\n      \"\n    >\n      <img class=\"user-avatar\" src=\"{{ afAuth.currentUser.photoURL }}\" alt=\"\" />\n    </ng-container>\n  </button>\n</mat-toolbar>\n\n<ng-template #noCurrentUserOrPhoto>\n  <mat-icon>account_circle</mat-icon>\n</ng-template>\n\n<mat-menu></mat-menu>\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        },
                        {
                            "name": "CoreModule"
                        },
                        {
                            "name": "MaterialModule"
                        },
                        {
                            "name": "provideAuth(() => auth)"
                        },
                        {
                            "name": "provideFirebaseApp(() => firebaseApp)"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CoreModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CoreComponent"
                        },
                        {
                            "name": "LocalizeAuthErrorPipe"
                        },
                        {
                            "name": "PageNotFoundComponent"
                        },
                        {
                            "name": "ToolbarComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        },
                        {
                            "name": "MaterialModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "CoreComponent"
                        },
                        {
                            "name": "PageNotFoundComponent"
                        },
                        {
                            "name": "ToolbarComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "DashModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "DashComponent"
                        },
                        {
                            "name": "LandingComponent"
                        },
                        {
                            "name": "SigninComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "DashRoutingModule"
                        },
                        {
                            "name": "MaterialModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "DashRoutingModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "MaterialModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "auth",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.module.ts",
                "type": "",
                "defaultValue": "getAuth()"
            },
            {
                "name": "AuthErrorMessages",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pipes/localize-auth-error.pipe.ts",
                "type": "literal type",
                "defaultValue": "{\n  'auth/admin-restricted-operation': $localize`:@@firebase.auth.errors.adminOnlyOperation:This operation can be done only by administrators.`,\n  'auth/auth-domain-config-required': $localize`:@@firebase.auth.errors.invalidOrigin:The current domain is not authorized for the operation.`,\n  'auth/cancelled-popup-request': $localize`:@@firebase.auth.errors.cancelledPopUpRequest:The popup request was cancelled by the user.`,\n}"
            },
            {
                "name": "canActivate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/guards/auth.guard.ts",
                "type": "",
                "defaultValue": "(pipe: AuthPipeGenerator) => ({\n  canActivate: [AuthGuard],\n  data: { authGuardPipe: pipe },\n})"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "customClaims",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/guards/auth.guard.ts",
                "type": "",
                "defaultValue": "pipe(\n  idTokenResult,\n  map((idTokenResult) => (idTokenResult ? idTokenResult.claims : []))\n)"
            },
            {
                "name": "emailVerified",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/guards/auth.guard.ts",
                "type": "AuthPipe",
                "defaultValue": "map(\n  (user) => !!user && user.emailVerified\n)"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "type": "object",
                "defaultValue": "{\n  production: true,\n  firebase: {\n    projectId: 'lookahead-89164',\n    appId: '1:725183458652:web:3c02720c8c29f4bd34e599',\n    databaseURL: 'https://lookahead-89164.firebaseio.com',\n    storageBucket: 'lookahead-89164.appspot.com',\n    locationId: 'us-central',\n    apiKey: 'AIzaSyBEwYIVfcvUa8BHVxsilJVWxFru3ujH_4c',\n    authDomain: 'lookahead-89164.firebaseapp.com',\n    messagingSenderId: '725183458652',\n    measurementId: 'G-8W90JQ19CR',\n  },\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "type": "object",
                "defaultValue": "{\n  production: false,\n  // These are dummy credentials\n  firebase: {\n    apiKey: 'dummy-api-key',\n    projectId: 'dummy-project',\n  },\n}"
            },
            {
                "name": "firebaseApp",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.module.ts",
                "type": "",
                "defaultValue": "initializeApp(environment.firebase)"
            },
            {
                "name": "hasCustomClaim",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/guards/auth.guard.ts",
                "type": "AuthPipe",
                "defaultValue": "(claim) =>\n  pipe(\n    customClaims,\n    map((claims) => claims.hasOwnProperty(claim))\n  )"
            },
            {
                "name": "idTokenResult",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/guards/auth.guard.ts",
                "type": "",
                "defaultValue": "switchMap((user: User | null) =>\n  user ? user.getIdTokenResult() : of(null)\n)"
            },
            {
                "name": "isNotAnonymous",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/guards/auth.guard.ts",
                "type": "AuthPipe",
                "defaultValue": "map(\n  (user) => !!user && !user.isAnonymous\n)"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "loggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/guards/auth.guard.ts",
                "type": "AuthPipe",
                "defaultValue": "map((user) => !!user)"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "MatModules",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/material.module.ts",
                "type": "[]",
                "defaultValue": "[\n  MatButtonModule,\n  MatToolbarModule,\n  MatCardModule,\n  MatIconModule,\n  MatInputModule,\n  MatFormFieldModule,\n  MatSnackBarModule,\n  MatMenuModule,\n]"
            },
            {
                "name": "NotSignedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/components/toolbar/toolbar.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "redirectLoggedInTo",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/guards/auth.guard.ts",
                "type": "AuthPipe",
                "defaultValue": "(\n  redirect\n) =>\n  pipe(\n    loggedIn,\n    map((loggedIn) => (loggedIn && redirect) || true)\n  )"
            },
            {
                "name": "redirectLoggedInToApp",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/dash/dash-routing.module.ts",
                "type": "",
                "defaultValue": "() => redirectLoggedInTo(['app'])"
            },
            {
                "name": "redirectUnauthorizedTo",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/guards/auth.guard.ts",
                "type": "AuthPipe",
                "defaultValue": "(\n  redirect\n) =>\n  pipe(\n    loggedIn,\n    map((loggedIn) => loggedIn || redirect)\n  )"
            },
            {
                "name": "redirectUnauthorizedToSignIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/dash/dash-routing.module.ts",
                "type": "",
                "defaultValue": "() => redirectUnauthorizedTo(['signin'])"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "type": "literal type"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "type": "Story<Header>",
                "defaultValue": "(args: Header) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "type": "Story<Button>",
                "defaultValue": "(args: Button) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "type": "Story<Page>",
                "defaultValue": "(args: Page) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/components/toolbar/toolbar.stories.ts",
                "type": "Story<ToolbarComponent>",
                "defaultValue": "(args: ToolbarComponent) => ({\n  props: args,\n  moduleMetadata: { imports: [AppModule] },\n})"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "AuthPipe",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "UnaryFunction<Observable<User | null> | Observable<boolean | string | []>>",
                "file": "src/app/core/guards/auth.guard.ts",
                "description": "",
                "kind": 161
            },
            {
                "name": "AuthPipeGenerator",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "function",
                "file": "src/app/core/guards/auth.guard.ts",
                "description": "",
                "kind": 162
            }
        ],
        "enumerations": [
            {
                "name": "AuthCodes",
                "childs": [
                    {
                        "name": "ADMIN_ONLY_OPERATION",
                        "value": "admin-restricted-operation"
                    },
                    {
                        "name": "ARGUMENT_ERROR",
                        "value": "argument-error"
                    },
                    {
                        "name": "APP_NOT_AUTHORIZED",
                        "value": "app-not-authorized"
                    },
                    {
                        "name": "APP_NOT_INSTALLED",
                        "value": "app-not-installed"
                    },
                    {
                        "name": "CAPTCHA_CHECK_FAILED",
                        "value": "captcha-check-failed"
                    },
                    {
                        "name": "CODE_EXPIRED",
                        "value": "code-expired"
                    },
                    {
                        "name": "CORDOVA_NOT_READY",
                        "value": "cordova-not-ready"
                    },
                    {
                        "name": "CORS_UNSUPPORTED",
                        "value": "cors-unsupported"
                    },
                    {
                        "name": "CREDENTIAL_ALREADY_IN_USE",
                        "value": "credential-already-in-use"
                    },
                    {
                        "name": "CREDENTIAL_MISMATCH",
                        "value": "custom-token-mismatch"
                    },
                    {
                        "name": "CREDENTIAL_TOO_OLD_LOGIN_AGAIN",
                        "value": "requires-recent-login"
                    },
                    {
                        "name": "DEPENDENT_SDK_INIT_BEFORE_AUTH",
                        "value": "dependent-sdk-initialized-before-auth"
                    },
                    {
                        "name": "DYNAMIC_LINK_NOT_ACTIVATED",
                        "value": "dynamic-link-not-activated"
                    },
                    {
                        "name": "EMAIL_CHANGE_NEEDS_VERIFICATION",
                        "value": "email-change-needs-verification"
                    },
                    {
                        "name": "EMAIL_EXISTS",
                        "value": "email-already-in-use"
                    },
                    {
                        "name": "EMULATOR_CONFIG_FAILED",
                        "value": "emulator-config-failed"
                    },
                    {
                        "name": "EXPIRED_OOB_CODE",
                        "value": "expired-action-code"
                    },
                    {
                        "name": "EXPIRED_POPUP_REQUEST",
                        "value": "cancelled-popup-request"
                    },
                    {
                        "name": "INTERNAL_ERROR",
                        "value": "internal-error"
                    },
                    {
                        "name": "INVALID_API_KEY",
                        "value": "invalid-api-key"
                    },
                    {
                        "name": "INVALID_APP_CREDENTIAL",
                        "value": "invalid-app-credential"
                    },
                    {
                        "name": "INVALID_APP_ID",
                        "value": "invalid-app-id"
                    },
                    {
                        "name": "INVALID_AUTH",
                        "value": "invalid-user-token"
                    },
                    {
                        "name": "INVALID_AUTH_EVENT",
                        "value": "invalid-auth-event"
                    },
                    {
                        "name": "INVALID_CERT_HASH",
                        "value": "invalid-cert-hash"
                    },
                    {
                        "name": "INVALID_CODE",
                        "value": "invalid-verification-code"
                    },
                    {
                        "name": "INVALID_CONTINUE_URI",
                        "value": "invalid-continue-uri"
                    },
                    {
                        "name": "INVALID_CORDOVA_CONFIGURATION",
                        "value": "invalid-cordova-configuration"
                    },
                    {
                        "name": "INVALID_CUSTOM_TOKEN",
                        "value": "invalid-custom-token"
                    },
                    {
                        "name": "INVALID_DYNAMIC_LINK_DOMAIN",
                        "value": "invalid-dynamic-link-domain"
                    },
                    {
                        "name": "INVALID_EMAIL",
                        "value": "invalid-email"
                    },
                    {
                        "name": "INVALID_EMULATOR_SCHEME",
                        "value": "invalid-emulator-scheme"
                    },
                    {
                        "name": "INVALID_IDP_RESPONSE",
                        "value": "invalid-credential"
                    },
                    {
                        "name": "INVALID_MESSAGE_PAYLOAD",
                        "value": "invalid-message-payload"
                    },
                    {
                        "name": "INVALID_MFA_SESSION",
                        "value": "invalid-multi-factor-session"
                    },
                    {
                        "name": "INVALID_OAUTH_CLIENT_ID",
                        "value": "invalid-oauth-client-id"
                    },
                    {
                        "name": "INVALID_OAUTH_PROVIDER",
                        "value": "invalid-oauth-provider"
                    },
                    {
                        "name": "INVALID_OOB_CODE",
                        "value": "invalid-action-code"
                    },
                    {
                        "name": "INVALID_ORIGIN",
                        "value": "unauthorized-domain"
                    },
                    {
                        "name": "INVALID_PASSWORD",
                        "value": "wrong-password"
                    },
                    {
                        "name": "INVALID_PERSISTENCE",
                        "value": "invalid-persistence-type"
                    },
                    {
                        "name": "INVALID_PHONE_NUMBER",
                        "value": "invalid-phone-number"
                    },
                    {
                        "name": "INVALID_PROVIDER_ID",
                        "value": "invalid-provider-id"
                    },
                    {
                        "name": "INVALID_RECIPIENT_EMAIL",
                        "value": "invalid-recipient-email"
                    },
                    {
                        "name": "INVALID_SENDER",
                        "value": "invalid-sender"
                    },
                    {
                        "name": "INVALID_SESSION_INFO",
                        "value": "invalid-verification-id"
                    },
                    {
                        "name": "INVALID_TENANT_ID",
                        "value": "invalid-tenant-id"
                    },
                    {
                        "name": "MFA_INFO_NOT_FOUND",
                        "value": "multi-factor-info-not-found"
                    },
                    {
                        "name": "MFA_REQUIRED",
                        "value": "multi-factor-auth-required"
                    },
                    {
                        "name": "MISSING_ANDROID_PACKAGE_NAME",
                        "value": "missing-android-pkg-name"
                    },
                    {
                        "name": "MISSING_APP_CREDENTIAL",
                        "value": "missing-app-credential"
                    },
                    {
                        "name": "MISSING_AUTH_DOMAIN",
                        "value": "auth-domain-config-required"
                    },
                    {
                        "name": "MISSING_CODE",
                        "value": "missing-verification-code"
                    },
                    {
                        "name": "MISSING_CONTINUE_URI",
                        "value": "missing-continue-uri"
                    },
                    {
                        "name": "MISSING_IFRAME_START",
                        "value": "missing-iframe-start"
                    },
                    {
                        "name": "MISSING_IOS_BUNDLE_ID",
                        "value": "missing-ios-bundle-id"
                    },
                    {
                        "name": "MISSING_OR_INVALID_NONCE",
                        "value": "missing-or-invalid-nonce"
                    },
                    {
                        "name": "MISSING_MFA_INFO",
                        "value": "missing-multi-factor-info"
                    },
                    {
                        "name": "MISSING_MFA_SESSION",
                        "value": "missing-multi-factor-session"
                    },
                    {
                        "name": "MISSING_PHONE_NUMBER",
                        "value": "missing-phone-number"
                    },
                    {
                        "name": "MISSING_SESSION_INFO",
                        "value": "missing-verification-id"
                    },
                    {
                        "name": "MODULE_DESTROYED",
                        "value": "app-deleted"
                    },
                    {
                        "name": "NEED_CONFIRMATION",
                        "value": "account-exists-with-different-credential"
                    },
                    {
                        "name": "NETWORK_REQUEST_FAILED",
                        "value": "network-request-failed"
                    },
                    {
                        "name": "NULL_USER",
                        "value": "null-user"
                    },
                    {
                        "name": "NO_AUTH_EVENT",
                        "value": "no-auth-event"
                    },
                    {
                        "name": "NO_SUCH_PROVIDER",
                        "value": "no-such-provider"
                    },
                    {
                        "name": "OPERATION_NOT_ALLOWED",
                        "value": "operation-not-allowed"
                    },
                    {
                        "name": "OPERATION_NOT_SUPPORTED",
                        "value": "operation-not-supported-in-this-environment"
                    },
                    {
                        "name": "POPUP_BLOCKED",
                        "value": "popup-blocked"
                    },
                    {
                        "name": "POPUP_CLOSED_BY_USER",
                        "value": "popup-closed-by-user"
                    },
                    {
                        "name": "PROVIDER_ALREADY_LINKED",
                        "value": "provider-already-linked"
                    },
                    {
                        "name": "QUOTA_EXCEEDED",
                        "value": "quota-exceeded"
                    },
                    {
                        "name": "REDIRECT_CANCELLED_BY_USER",
                        "value": "redirect-cancelled-by-user"
                    },
                    {
                        "name": "REDIRECT_OPERATION_PENDING",
                        "value": "redirect-operation-pending"
                    },
                    {
                        "name": "REJECTED_CREDENTIAL",
                        "value": "rejected-credential"
                    },
                    {
                        "name": "SECOND_FACTOR_ALREADY_ENROLLED",
                        "value": "second-factor-already-in-use"
                    },
                    {
                        "name": "SECOND_FACTOR_LIMIT_EXCEEDED",
                        "value": "maximum-second-factor-count-exceeded"
                    },
                    {
                        "name": "TENANT_ID_MISMATCH",
                        "value": "tenant-id-mismatch"
                    },
                    {
                        "name": "TIMEOUT",
                        "value": "timeout"
                    },
                    {
                        "name": "TOKEN_EXPIRED",
                        "value": "user-token-expired"
                    },
                    {
                        "name": "TOO_MANY_ATTEMPTS_TRY_LATER",
                        "value": "too-many-requests"
                    },
                    {
                        "name": "UNAUTHORIZED_DOMAIN",
                        "value": "unauthorized-continue-uri"
                    },
                    {
                        "name": "UNSUPPORTED_FIRST_FACTOR",
                        "value": "unsupported-first-factor"
                    },
                    {
                        "name": "UNSUPPORTED_PERSISTENCE",
                        "value": "unsupported-persistence-type"
                    },
                    {
                        "name": "UNSUPPORTED_TENANT_OPERATION",
                        "value": "unsupported-tenant-operation"
                    },
                    {
                        "name": "UNVERIFIED_EMAIL",
                        "value": "unverified-email"
                    },
                    {
                        "name": "USER_CANCELLED",
                        "value": "user-cancelled"
                    },
                    {
                        "name": "USER_DELETED",
                        "value": "user-not-found"
                    },
                    {
                        "name": "USER_DISABLED",
                        "value": "user-disabled"
                    },
                    {
                        "name": "USER_MISMATCH",
                        "value": "user-mismatch"
                    },
                    {
                        "name": "USER_SIGNED_OUT",
                        "value": "user-signed-out"
                    },
                    {
                        "name": "WEAK_PASSWORD",
                        "value": "weak-password"
                    },
                    {
                        "name": "WEB_STORAGE_UNSUPPORTED",
                        "value": "web-storage-unsupported"
                    },
                    {
                        "name": "ALREADY_INITIALIZED",
                        "value": "already-initialized"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "description": "",
                "file": "src/app/pipes/localize-auth-error.pipe.ts"
            }
        ],
        "groupedVariables": {
            "src/app/app.module.ts": [
                {
                    "name": "auth",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.module.ts",
                    "type": "",
                    "defaultValue": "getAuth()"
                },
                {
                    "name": "firebaseApp",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.module.ts",
                    "type": "",
                    "defaultValue": "initializeApp(environment.firebase)"
                }
            ],
            "src/app/pipes/localize-auth-error.pipe.ts": [
                {
                    "name": "AuthErrorMessages",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pipes/localize-auth-error.pipe.ts",
                    "type": "literal type",
                    "defaultValue": "{\n  'auth/admin-restricted-operation': $localize`:@@firebase.auth.errors.adminOnlyOperation:This operation can be done only by administrators.`,\n  'auth/auth-domain-config-required': $localize`:@@firebase.auth.errors.invalidOrigin:The current domain is not authorized for the operation.`,\n  'auth/cancelled-popup-request': $localize`:@@firebase.auth.errors.cancelledPopUpRequest:The popup request was cancelled by the user.`,\n}"
                }
            ],
            "src/app/core/guards/auth.guard.ts": [
                {
                    "name": "canActivate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/guards/auth.guard.ts",
                    "type": "",
                    "defaultValue": "(pipe: AuthPipeGenerator) => ({\n  canActivate: [AuthGuard],\n  data: { authGuardPipe: pipe },\n})"
                },
                {
                    "name": "customClaims",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/guards/auth.guard.ts",
                    "type": "",
                    "defaultValue": "pipe(\n  idTokenResult,\n  map((idTokenResult) => (idTokenResult ? idTokenResult.claims : []))\n)"
                },
                {
                    "name": "emailVerified",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/guards/auth.guard.ts",
                    "type": "AuthPipe",
                    "defaultValue": "map(\n  (user) => !!user && user.emailVerified\n)"
                },
                {
                    "name": "hasCustomClaim",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/guards/auth.guard.ts",
                    "type": "AuthPipe",
                    "defaultValue": "(claim) =>\n  pipe(\n    customClaims,\n    map((claims) => claims.hasOwnProperty(claim))\n  )"
                },
                {
                    "name": "idTokenResult",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/guards/auth.guard.ts",
                    "type": "",
                    "defaultValue": "switchMap((user: User | null) =>\n  user ? user.getIdTokenResult() : of(null)\n)"
                },
                {
                    "name": "isNotAnonymous",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/guards/auth.guard.ts",
                    "type": "AuthPipe",
                    "defaultValue": "map(\n  (user) => !!user && !user.isAnonymous\n)"
                },
                {
                    "name": "loggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/guards/auth.guard.ts",
                    "type": "AuthPipe",
                    "defaultValue": "map((user) => !!user)"
                },
                {
                    "name": "redirectLoggedInTo",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/guards/auth.guard.ts",
                    "type": "AuthPipe",
                    "defaultValue": "(\n  redirect\n) =>\n  pipe(\n    loggedIn,\n    map((loggedIn) => (loggedIn && redirect) || true)\n  )"
                },
                {
                    "name": "redirectUnauthorizedTo",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/guards/auth.guard.ts",
                    "type": "AuthPipe",
                    "defaultValue": "(\n  redirect\n) =>\n  pipe(\n    loggedIn,\n    map((loggedIn) => loggedIn || redirect)\n  )"
                }
            ],
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "type": "literal type"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "type": "object",
                    "defaultValue": "{\n  production: true,\n  firebase: {\n    projectId: 'lookahead-89164',\n    appId: '1:725183458652:web:3c02720c8c29f4bd34e599',\n    databaseURL: 'https://lookahead-89164.firebaseio.com',\n    storageBucket: 'lookahead-89164.appspot.com',\n    locationId: 'us-central',\n    apiKey: 'AIzaSyBEwYIVfcvUa8BHVxsilJVWxFru3ujH_4c',\n    authDomain: 'lookahead-89164.firebaseapp.com',\n    messagingSenderId: '725183458652',\n    measurementId: 'G-8W90JQ19CR',\n  },\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "type": "object",
                    "defaultValue": "{\n  production: false,\n  // These are dummy credentials\n  firebase: {\n    apiKey: 'dummy-api-key',\n    projectId: 'dummy-project',\n  },\n}"
                }
            ],
            "src/stories/Button.stories.ts": [
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "type": "Story<Button>",
                    "defaultValue": "(args: Button) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/Header.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "type": "Story<Header>",
                    "defaultValue": "(args: Header) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/Page.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "type": "Story<Page>",
                    "defaultValue": "(args: Page) => ({\n  props: args,\n})"
                }
            ],
            "src/app/material.module.ts": [
                {
                    "name": "MatModules",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/material.module.ts",
                    "type": "[]",
                    "defaultValue": "[\n  MatButtonModule,\n  MatToolbarModule,\n  MatCardModule,\n  MatIconModule,\n  MatInputModule,\n  MatFormFieldModule,\n  MatSnackBarModule,\n  MatMenuModule,\n]"
                }
            ],
            "src/app/core/components/toolbar/toolbar.stories.ts": [
                {
                    "name": "NotSignedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/components/toolbar/toolbar.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/components/toolbar/toolbar.stories.ts",
                    "type": "Story<ToolbarComponent>",
                    "defaultValue": "(args: ToolbarComponent) => ({\n  props: args,\n  moduleMetadata: { imports: [AppModule] },\n})"
                }
            ],
            "src/app/dash/dash-routing.module.ts": [
                {
                    "name": "redirectLoggedInToApp",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/dash/dash-routing.module.ts",
                    "type": "",
                    "defaultValue": "() => redirectLoggedInTo(['app'])"
                },
                {
                    "name": "redirectUnauthorizedToSignIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/dash/dash-routing.module.ts",
                    "type": "",
                    "defaultValue": "() => redirectUnauthorizedTo(['signin'])"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {
            "src/app/pipes/localize-auth-error.pipe.ts": [
                {
                    "name": "AuthCodes",
                    "childs": [
                        {
                            "name": "ADMIN_ONLY_OPERATION",
                            "value": "admin-restricted-operation"
                        },
                        {
                            "name": "ARGUMENT_ERROR",
                            "value": "argument-error"
                        },
                        {
                            "name": "APP_NOT_AUTHORIZED",
                            "value": "app-not-authorized"
                        },
                        {
                            "name": "APP_NOT_INSTALLED",
                            "value": "app-not-installed"
                        },
                        {
                            "name": "CAPTCHA_CHECK_FAILED",
                            "value": "captcha-check-failed"
                        },
                        {
                            "name": "CODE_EXPIRED",
                            "value": "code-expired"
                        },
                        {
                            "name": "CORDOVA_NOT_READY",
                            "value": "cordova-not-ready"
                        },
                        {
                            "name": "CORS_UNSUPPORTED",
                            "value": "cors-unsupported"
                        },
                        {
                            "name": "CREDENTIAL_ALREADY_IN_USE",
                            "value": "credential-already-in-use"
                        },
                        {
                            "name": "CREDENTIAL_MISMATCH",
                            "value": "custom-token-mismatch"
                        },
                        {
                            "name": "CREDENTIAL_TOO_OLD_LOGIN_AGAIN",
                            "value": "requires-recent-login"
                        },
                        {
                            "name": "DEPENDENT_SDK_INIT_BEFORE_AUTH",
                            "value": "dependent-sdk-initialized-before-auth"
                        },
                        {
                            "name": "DYNAMIC_LINK_NOT_ACTIVATED",
                            "value": "dynamic-link-not-activated"
                        },
                        {
                            "name": "EMAIL_CHANGE_NEEDS_VERIFICATION",
                            "value": "email-change-needs-verification"
                        },
                        {
                            "name": "EMAIL_EXISTS",
                            "value": "email-already-in-use"
                        },
                        {
                            "name": "EMULATOR_CONFIG_FAILED",
                            "value": "emulator-config-failed"
                        },
                        {
                            "name": "EXPIRED_OOB_CODE",
                            "value": "expired-action-code"
                        },
                        {
                            "name": "EXPIRED_POPUP_REQUEST",
                            "value": "cancelled-popup-request"
                        },
                        {
                            "name": "INTERNAL_ERROR",
                            "value": "internal-error"
                        },
                        {
                            "name": "INVALID_API_KEY",
                            "value": "invalid-api-key"
                        },
                        {
                            "name": "INVALID_APP_CREDENTIAL",
                            "value": "invalid-app-credential"
                        },
                        {
                            "name": "INVALID_APP_ID",
                            "value": "invalid-app-id"
                        },
                        {
                            "name": "INVALID_AUTH",
                            "value": "invalid-user-token"
                        },
                        {
                            "name": "INVALID_AUTH_EVENT",
                            "value": "invalid-auth-event"
                        },
                        {
                            "name": "INVALID_CERT_HASH",
                            "value": "invalid-cert-hash"
                        },
                        {
                            "name": "INVALID_CODE",
                            "value": "invalid-verification-code"
                        },
                        {
                            "name": "INVALID_CONTINUE_URI",
                            "value": "invalid-continue-uri"
                        },
                        {
                            "name": "INVALID_CORDOVA_CONFIGURATION",
                            "value": "invalid-cordova-configuration"
                        },
                        {
                            "name": "INVALID_CUSTOM_TOKEN",
                            "value": "invalid-custom-token"
                        },
                        {
                            "name": "INVALID_DYNAMIC_LINK_DOMAIN",
                            "value": "invalid-dynamic-link-domain"
                        },
                        {
                            "name": "INVALID_EMAIL",
                            "value": "invalid-email"
                        },
                        {
                            "name": "INVALID_EMULATOR_SCHEME",
                            "value": "invalid-emulator-scheme"
                        },
                        {
                            "name": "INVALID_IDP_RESPONSE",
                            "value": "invalid-credential"
                        },
                        {
                            "name": "INVALID_MESSAGE_PAYLOAD",
                            "value": "invalid-message-payload"
                        },
                        {
                            "name": "INVALID_MFA_SESSION",
                            "value": "invalid-multi-factor-session"
                        },
                        {
                            "name": "INVALID_OAUTH_CLIENT_ID",
                            "value": "invalid-oauth-client-id"
                        },
                        {
                            "name": "INVALID_OAUTH_PROVIDER",
                            "value": "invalid-oauth-provider"
                        },
                        {
                            "name": "INVALID_OOB_CODE",
                            "value": "invalid-action-code"
                        },
                        {
                            "name": "INVALID_ORIGIN",
                            "value": "unauthorized-domain"
                        },
                        {
                            "name": "INVALID_PASSWORD",
                            "value": "wrong-password"
                        },
                        {
                            "name": "INVALID_PERSISTENCE",
                            "value": "invalid-persistence-type"
                        },
                        {
                            "name": "INVALID_PHONE_NUMBER",
                            "value": "invalid-phone-number"
                        },
                        {
                            "name": "INVALID_PROVIDER_ID",
                            "value": "invalid-provider-id"
                        },
                        {
                            "name": "INVALID_RECIPIENT_EMAIL",
                            "value": "invalid-recipient-email"
                        },
                        {
                            "name": "INVALID_SENDER",
                            "value": "invalid-sender"
                        },
                        {
                            "name": "INVALID_SESSION_INFO",
                            "value": "invalid-verification-id"
                        },
                        {
                            "name": "INVALID_TENANT_ID",
                            "value": "invalid-tenant-id"
                        },
                        {
                            "name": "MFA_INFO_NOT_FOUND",
                            "value": "multi-factor-info-not-found"
                        },
                        {
                            "name": "MFA_REQUIRED",
                            "value": "multi-factor-auth-required"
                        },
                        {
                            "name": "MISSING_ANDROID_PACKAGE_NAME",
                            "value": "missing-android-pkg-name"
                        },
                        {
                            "name": "MISSING_APP_CREDENTIAL",
                            "value": "missing-app-credential"
                        },
                        {
                            "name": "MISSING_AUTH_DOMAIN",
                            "value": "auth-domain-config-required"
                        },
                        {
                            "name": "MISSING_CODE",
                            "value": "missing-verification-code"
                        },
                        {
                            "name": "MISSING_CONTINUE_URI",
                            "value": "missing-continue-uri"
                        },
                        {
                            "name": "MISSING_IFRAME_START",
                            "value": "missing-iframe-start"
                        },
                        {
                            "name": "MISSING_IOS_BUNDLE_ID",
                            "value": "missing-ios-bundle-id"
                        },
                        {
                            "name": "MISSING_OR_INVALID_NONCE",
                            "value": "missing-or-invalid-nonce"
                        },
                        {
                            "name": "MISSING_MFA_INFO",
                            "value": "missing-multi-factor-info"
                        },
                        {
                            "name": "MISSING_MFA_SESSION",
                            "value": "missing-multi-factor-session"
                        },
                        {
                            "name": "MISSING_PHONE_NUMBER",
                            "value": "missing-phone-number"
                        },
                        {
                            "name": "MISSING_SESSION_INFO",
                            "value": "missing-verification-id"
                        },
                        {
                            "name": "MODULE_DESTROYED",
                            "value": "app-deleted"
                        },
                        {
                            "name": "NEED_CONFIRMATION",
                            "value": "account-exists-with-different-credential"
                        },
                        {
                            "name": "NETWORK_REQUEST_FAILED",
                            "value": "network-request-failed"
                        },
                        {
                            "name": "NULL_USER",
                            "value": "null-user"
                        },
                        {
                            "name": "NO_AUTH_EVENT",
                            "value": "no-auth-event"
                        },
                        {
                            "name": "NO_SUCH_PROVIDER",
                            "value": "no-such-provider"
                        },
                        {
                            "name": "OPERATION_NOT_ALLOWED",
                            "value": "operation-not-allowed"
                        },
                        {
                            "name": "OPERATION_NOT_SUPPORTED",
                            "value": "operation-not-supported-in-this-environment"
                        },
                        {
                            "name": "POPUP_BLOCKED",
                            "value": "popup-blocked"
                        },
                        {
                            "name": "POPUP_CLOSED_BY_USER",
                            "value": "popup-closed-by-user"
                        },
                        {
                            "name": "PROVIDER_ALREADY_LINKED",
                            "value": "provider-already-linked"
                        },
                        {
                            "name": "QUOTA_EXCEEDED",
                            "value": "quota-exceeded"
                        },
                        {
                            "name": "REDIRECT_CANCELLED_BY_USER",
                            "value": "redirect-cancelled-by-user"
                        },
                        {
                            "name": "REDIRECT_OPERATION_PENDING",
                            "value": "redirect-operation-pending"
                        },
                        {
                            "name": "REJECTED_CREDENTIAL",
                            "value": "rejected-credential"
                        },
                        {
                            "name": "SECOND_FACTOR_ALREADY_ENROLLED",
                            "value": "second-factor-already-in-use"
                        },
                        {
                            "name": "SECOND_FACTOR_LIMIT_EXCEEDED",
                            "value": "maximum-second-factor-count-exceeded"
                        },
                        {
                            "name": "TENANT_ID_MISMATCH",
                            "value": "tenant-id-mismatch"
                        },
                        {
                            "name": "TIMEOUT",
                            "value": "timeout"
                        },
                        {
                            "name": "TOKEN_EXPIRED",
                            "value": "user-token-expired"
                        },
                        {
                            "name": "TOO_MANY_ATTEMPTS_TRY_LATER",
                            "value": "too-many-requests"
                        },
                        {
                            "name": "UNAUTHORIZED_DOMAIN",
                            "value": "unauthorized-continue-uri"
                        },
                        {
                            "name": "UNSUPPORTED_FIRST_FACTOR",
                            "value": "unsupported-first-factor"
                        },
                        {
                            "name": "UNSUPPORTED_PERSISTENCE",
                            "value": "unsupported-persistence-type"
                        },
                        {
                            "name": "UNSUPPORTED_TENANT_OPERATION",
                            "value": "unsupported-tenant-operation"
                        },
                        {
                            "name": "UNVERIFIED_EMAIL",
                            "value": "unverified-email"
                        },
                        {
                            "name": "USER_CANCELLED",
                            "value": "user-cancelled"
                        },
                        {
                            "name": "USER_DELETED",
                            "value": "user-not-found"
                        },
                        {
                            "name": "USER_DISABLED",
                            "value": "user-disabled"
                        },
                        {
                            "name": "USER_MISMATCH",
                            "value": "user-mismatch"
                        },
                        {
                            "name": "USER_SIGNED_OUT",
                            "value": "user-signed-out"
                        },
                        {
                            "name": "WEAK_PASSWORD",
                            "value": "weak-password"
                        },
                        {
                            "name": "WEB_STORAGE_UNSUPPORTED",
                            "value": "web-storage-unsupported"
                        },
                        {
                            "name": "ALREADY_INITIALIZED",
                            "value": "already-initialized"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "description": "",
                    "file": "src/app/pipes/localize-auth-error.pipe.ts"
                }
            ]
        },
        "groupedTypeAliases": {
            "src/app/core/guards/auth.guard.ts": [
                {
                    "name": "AuthPipe",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "UnaryFunction<Observable<User | null> | Observable<boolean | string | []>>",
                    "file": "src/app/core/guards/auth.guard.ts",
                    "description": "",
                    "kind": 161
                },
                {
                    "name": "AuthPipeGenerator",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "function",
                    "file": "src/app/core/guards/auth.guard.ts",
                    "description": "",
                    "kind": 162
                }
            ]
        }
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 3,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/app.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "auth",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "firebaseApp",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/components/page-not-found/page-not-found.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageNotFoundComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/components/toolbar/toolbar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ToolbarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/components/toolbar/toolbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NotSignedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/components/toolbar/toolbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/core.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CoreComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/guards/auth.guard.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "AuthGuard",
                "coveragePercent": 33,
                "coverageCount": "1/3",
                "status": "medium"
            },
            {
                "filePath": "src/app/core/guards/auth.guard.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "canActivate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/guards/auth.guard.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "customClaims",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/guards/auth.guard.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "emailVerified",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/guards/auth.guard.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "hasCustomClaim",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/guards/auth.guard.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "idTokenResult",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/guards/auth.guard.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "isNotAnonymous",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/guards/auth.guard.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "loggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/guards/auth.guard.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "redirectLoggedInTo",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/guards/auth.guard.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "redirectUnauthorizedTo",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/auth.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AuthService",
                "coveragePercent": 50,
                "coverageCount": "3/6",
                "status": "medium"
            },
            {
                "filePath": "src/app/dash/dash-routing.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "redirectLoggedInToApp",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/dash/dash-routing.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "redirectUnauthorizedToSignIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/dash/dash/dash.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DashComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/dash/landing/landing.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LandingComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/dash/signin/signin.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SigninComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/material.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MatModules",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pipes/localize-auth-error.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "LocalizeAuthErrorPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pipes/localize-auth-error.pipe.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AuthErrorMessages",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "src/stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}